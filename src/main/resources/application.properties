clientApp.name="lvoix app"
server.port = 8091
# ===============================
# = DATA SOURCE
# ===============================
permitted-url=http://localhost:4200

# Set here configurations for the database connection
spring.datasource.driverClassName=com.mysql.jdbc.Driver
# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://localhost:3306/autogrande?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
# Username and password
spring.datasource.username = root
spring.datasource.password = lvoix2015
spring.jpa.database-platform = org.hibernate.dialect.MySQL5Dialect



# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update
#spring.jpa.database-platform = org.hibernate.dialect.MySQL5Dialect

#spring.jpa.properties.hibernate.format_sql=true
#logging.level.org.springframework.web=INFO
#logging.level.org.hibernate=INFO


# Hibernate
# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
#pring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.servlet.multipart.max-file-size=500KB
spring.servlet.multipart.max-request-size=500KB
#spring.servlet.multipart.enabled=false

